language: cpp

matrix:
 include:
   - compiler: gcc
     env: LIBARCHIVE_OFF=FALSE

   - compiler: gcc
     env: LIBARCHIVE_OFF=TRUE

   - compiler: clang
     env: LIBARCHIVE_OFF=FALSE

   - compiler: gcc
     env: LIBARCHIVE_OFF=FALSE
          DEPLOY_BUILD=TRUE

before_install:
 - sudo apt-get update -qq
 - sudo apt-get install -qq libboost-program-options-dev libboost-regex-dev libboost-filesystem-dev libboost-random-dev libboost-system-dev openbabel texlive-extra-utils python libeigen3-dev libarchive-dev texlive-extra-utils
 - export c_path=${PWD}

install:
 - cd ~ 
 - git clone https://github.com/openbabel/openbabel.git
 - cd openbabel && mkdir build && cd build
 - cmake ../ -DCMAKE_BUILD_TYPE=Release `[[ ${DEPLOY_BUILD} == TRUE ]] && echo "-DMINIMAL_BUILD=OFF -DBUILD_GUI=OFF -DBUILD_SHARED=OFF -DGLIBC_24_COMPATIBLE=ON -DWITH_INCHI=OFF -DENABLE_VERSIONED_FORMATS=OFF -DENABLE_TESTS=OFF"`
 - make && sudo make install
 - cd ~

before_script:
 - cd ${c_path}
 - mkdir build
 - cd build
 - cmake ../ -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_DISABLE_FIND_PACKAGE_LibArchive=${LIBARCHIVE_OFF} `[[ ${DEPLOY_BUILD} == TRUE ]] && echo "-DCMAKE_BUILD_TYPE=Release -DGLIBC_24_COMPATIBLE=ON -DLINK_STATIC_LIBS=ON" || echo "-DCMAKE_BUILD_TYPE=Debug"`

script:
 - make supercell
 - ./src/sc_cli/supercell -d -i ../data/examples/Ca2Al2SiO7/Ca2Al2SiO7.cif 
 - echo "Make docs..."; [[ ${DEPLOY_BUILD} == TRUE ]] && make doc_man doc_pdf
