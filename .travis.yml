sudo: required
dist: trusty

language: cpp

cache: ccache

matrix:
 include:
   - dist: precise
     compiler: gcc
     env: LIBARCHIVE_OFF=FALSE

   - compiler: gcc
     env: LIBARCHIVE_OFF=FALSE

   - compiler: gcc
     env: LIBARCHIVE_OFF=TRUE

   - compiler: clang
     env: LIBARCHIVE_OFF=FALSE

   - compiler: gcc
     env: LIBARCHIVE_OFF=FALSE
          DEPLOY_BUILD=TRUE

before_install:
 - wget https://github.com/orex/supercell/raw/deploy/deploy.sh && chmod +x deploy.sh
 - sudo apt-get update -qq
 - sudo apt-get install -qq libboost-program-options-dev libboost-regex-dev libboost-filesystem-dev libboost-random-dev libboost-system-dev openbabel texlive-extra-utils python libeigen3-dev libarchive-dev texlive-extra-utils liblzma-dev libbz2-dev zlib1g-dev texlive-latex-extra
 - export c_path=${PWD}

install:
 - cd ~ 
 - git clone https://github.com/openbabel/openbabel.git
 - cd openbabel && mkdir build && cd build
 - cmake ../ -DCMAKE_BUILD_TYPE=Release `[[ ${DEPLOY_BUILD} == TRUE ]] && echo "-DMINIMAL_BUILD=OFF -DBUILD_GUI=OFF -DBUILD_SHARED=OFF -DGLIBC_24_COMPATIBLE=ON -DWITH_INCHI=OFF -DENABLE_VERSIONED_FORMATS=OFF -DENABLE_TESTS=OFF"`
 - make && sudo make install
 - cd ~

before_script:
 - cd ${c_path}
 - mkdir build
 - cd build
 - cmake ../ -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_DISABLE_FIND_PACKAGE_LibArchive=${LIBARCHIVE_OFF} `[[ ${DEPLOY_BUILD} == TRUE ]] && echo "-DCMAKE_BUILD_TYPE=Release -DGLIBC_24_COMPATIBLE=ON -DLINK_STATIC_LIBS=ON" || echo "-DCMAKE_BUILD_TYPE=Debug"`

script:
 - make `[[ ${DEPLOY_BUILD} == TRUE ]] && echo "supercell doc_man doc_pdf doc_html tutorial_pdf" || echo "supercell"`
 - ./src/sc_cli/supercell -d -i ../data/examples/Ca2Al2SiO7/Ca2Al2SiO7.cif

deploy:
  provider: script
  script: ${c_path}/deploy.sh
  skip_cleanup: true
  on:
    branch: master
    condition: $DEPLOY_BUILD = TRUE
